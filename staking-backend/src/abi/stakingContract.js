export const stakingContract = {
	abi: [
		{
			inputs: [{ internalType: 'address', name: 'target', type: 'address' }],
			name: 'AddressEmptyCode',
			type: 'error',
		},
		{
			inputs: [
				{ internalType: 'address', name: 'implementation', type: 'address' },
			],
			name: 'ERC1967InvalidImplementation',
			type: 'error',
		},
		{ inputs: [], name: 'ERC1967NonPayable', type: 'error' },
		{ inputs: [], name: 'FailedInnerCall', type: 'error' },
		{ inputs: [], name: 'InvalidInitialization', type: 'error' },
		{ inputs: [], name: 'NotInitializing', type: 'error' },
		{
			inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
			name: 'OwnableInvalidOwner',
			type: 'error',
		},
		{
			inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
			name: 'OwnableUnauthorizedAccount',
			type: 'error',
		},
		{ inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },
		{ inputs: [], name: 'UUPSUnauthorizedCallContext', type: 'error' },
		{
			inputs: [{ internalType: 'bytes32', name: 'slot', type: 'bytes32' }],
			name: 'UUPSUnsupportedProxiableUUID',
			type: 'error',
		},
		{
			anonymous: false,
			inputs: [
				{
					indexed: false,
					internalType: 'uint64',
					name: 'version',
					type: 'uint64',
				},
			],
			name: 'Initialized',
			type: 'event',
		},
		{
			anonymous: false,
			inputs: [
				{
					indexed: true,
					internalType: 'address',
					name: 'previousOwner',
					type: 'address',
				},
				{
					indexed: true,
					internalType: 'address',
					name: 'newOwner',
					type: 'address',
				},
			],
			name: 'OwnershipTransferred',
			type: 'event',
		},
		{
			anonymous: false,
			inputs: [
				{
					indexed: true,
					internalType: 'address',
					name: 'user',
					type: 'address',
				},
				{
					indexed: false,
					internalType: 'uint256',
					name: 'amount',
					type: 'uint256',
				},
				{
					indexed: false,
					internalType: 'uint256',
					name: 'duration',
					type: 'uint256',
				},
			],
			name: 'Staked',
			type: 'event',
		},
		{
			anonymous: false,
			inputs: [
				{
					indexed: true,
					internalType: 'address',
					name: 'user',
					type: 'address',
				},
				{
					indexed: false,
					internalType: 'uint256',
					name: 'amount',
					type: 'uint256',
				},
				{ indexed: false, internalType: 'bool', name: 'early', type: 'bool' },
				{
					indexed: false,
					internalType: 'uint256',
					name: 'penalty',
					type: 'uint256',
				},
			],
			name: 'Unstaked',
			type: 'event',
		},
		{
			anonymous: false,
			inputs: [
				{
					indexed: true,
					internalType: 'address',
					name: 'implementation',
					type: 'address',
				},
			],
			name: 'Upgraded',
			type: 'event',
		},
		{
			inputs: [],
			name: 'UPGRADE_INTERFACE_VERSION',
			outputs: [{ internalType: 'string', name: '', type: 'string' }],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [
				{
					internalType: 'contract IERC20',
					name: '_stakingToken',
					type: 'address',
				},
				{ internalType: 'address', name: '_multiSigAddress', type: 'address' },
			],
			name: 'initialize',
			outputs: [],
			stateMutability: 'nonpayable',
			type: 'function',
		},
		{
			inputs: [],
			name: 'multiSigAddress',
			outputs: [{ internalType: 'address', name: '', type: 'address' }],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [],
			name: 'owner',
			outputs: [{ internalType: 'address', name: '', type: 'address' }],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [],
			name: 'proxiableUUID',
			outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [],
			name: 'renounceOwnership',
			outputs: [],
			stateMutability: 'nonpayable',
			type: 'function',
		},
		{
			inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
			name: 'rewardTiers',
			outputs: [
				{ internalType: 'uint256', name: 'duration', type: 'uint256' },
				{ internalType: 'uint256', name: 'rewardPercentage', type: 'uint256' },
				{
					internalType: 'uint256',
					name: 'earlyUnstakePenalty',
					type: 'uint256',
				},
				{ internalType: 'uint256', name: 'cooldownPeriod', type: 'uint256' },
			],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [
				{ internalType: 'uint256', name: '_duration', type: 'uint256' },
				{ internalType: 'uint256', name: '_rewardPercentage', type: 'uint256' },
				{
					internalType: 'uint256',
					name: '_earlyUnstakePenalty',
					type: 'uint256',
				},
				{ internalType: 'uint256', name: '_cooldownPeriod', type: 'uint256' },
			],
			name: 'setRewardTiers',
			outputs: [],
			stateMutability: 'nonpayable',
			type: 'function',
		},
		{
			inputs: [
				{ internalType: 'uint256', name: '_amount', type: 'uint256' },
				{ internalType: 'uint256', name: '_duration', type: 'uint256' },
			],
			name: 'stake',
			outputs: [],
			stateMutability: 'nonpayable',
			type: 'function',
		},
		{
			inputs: [{ internalType: 'address', name: '', type: 'address' }],
			name: 'stakingDetails',
			outputs: [
				{ internalType: 'uint256', name: 'amount', type: 'uint256' },
				{ internalType: 'uint256', name: 'stakingTime', type: 'uint256' },
				{ internalType: 'uint256', name: 'duration', type: 'uint256' },
				{ internalType: 'bool', name: 'withdrawn', type: 'bool' },
			],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [],
			name: 'stakingToken',
			outputs: [{ internalType: 'contract IERC20', name: '', type: 'address' }],
			stateMutability: 'view',
			type: 'function',
		},
		{
			inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
			name: 'transferOwnership',
			outputs: [],
			stateMutability: 'nonpayable',
			type: 'function',
		},
		{
			inputs: [],
			name: 'unstake',
			outputs: [],
			stateMutability: 'nonpayable',
			type: 'function',
		},
		{
			inputs: [
				{ internalType: 'address', name: 'newImplementation', type: 'address' },
				{ internalType: 'bytes', name: 'data', type: 'bytes' },
			],
			name: 'upgradeToAndCall',
			outputs: [],
			stateMutability: 'payable',
			type: 'function',
		},
	],
};
